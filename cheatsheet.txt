1️⃣ MongoDB commands for databases

📔 View all databases
👉 show dbs 

📔 Create a new or switch databases
👉 use dbName

📔 View current databases
👉 db

📔 Delete databases
👉 db.dropDatabase()

2️⃣ MongoDB commands for collectiions

📔 show Collections 
👉 show collections   {

📔 Create a collection named 'comments'
👉 db.createCollection('comments')

📔 Drop a collection named 'comments'
👉 db.comments.drop()

3️⃣ Row(Document) Commands

📔 Show all Rows in a Collection
👉 db.comments.find()

📔 Show all Rows in a Collection (Prettified)
👉 db.comments.find().pretty()

📔 Find the first row matching the object
👉 db.comments.findOne({name: 'Harry'})

📔 Insert One Row
👉 db.comments.insert({
    'name': 'Harry',
    'lang': 'JavaScript',
    'member_since': 5
 })

📔 Insert many Rows
👉 db.comments.insertMany([{
    'name': 'Harry',
    'lang': 'JavaScript',
    'member_since': 5
    }, 
    {'name': 'Rohan',
    'lang': 'Python',
    'member_since': 3
    },
    {'name': 'Lovish',
    'lang': 'Java',
    'member_since': 4
}])


📔 Search in a MongoDb Database
👉 db.comments.find({lang:'Python'})

📔 Limit the number of rows in output
👉 db.comments.find().limit(2)

📔 Count the number of rows in the output
👉 db.comments.find().count()

📔 Update a row
👉 db.comments.update({name: 'Shubham'},
{'name': 'Harry',
    'lang': 'JavaScript',
    'member_since': 51
}, {upsert: true})

📔 Mongodb Increment Operator
👉 db.comments.update({name: 'Rohan'},
{$inc:{
    member_since: 2
}})

📔 Mongodb Rename Operator
👉 db.comments.update({name: 'Rohan'},
{$rename:{
    member_since: 'member'
}})

📔 Delete Row 
👉 db.comments.remove({name: 'Harry'})

📔 Less than/Greater than/ Less than or Eq/Greater than or Eq
👉 db.comments.find({member_since: {$lt: 90}})
👉 db.comments.find({member_since: {$lte: 90}})
👉 db.comments.find({member_since: {$gt: 90}})
👉 db.comments.find({member_since: {$gte: 90}})


5️⃣ Find Method

👉 db.CollectionName.find(query,projection)


db.MERN.find({name:"React js"},{_id:0}).pretty()

_id : 0 is a projection which mean that not show an id if it is 1 it means show id

db.MERN.find({active:"true"}).limit(1).pretty()

limit() function limit the number of rows.

db.MERN.findOne({active:"true"})

fineOne function find only one Document

db.MERN.find({active:"true"}).limit(1).pretty().skip(1)

skip() function skip the match which number is given 


6️⃣ Update Method

👉 db.CollectionName.updateOne(filter,update)
👉 db.CollectionName.updateMany(filter,update)

db.MERN.updateOne({name:"React js"},{$set: {type:"Full stack"}})
$set operator replace the value of field

db.MERN.updateMany({active:"true"},{$set: {active:false}}) 


